name: MPW Precheck

on:
  # Runs on Every Push
  push:
  # Runs on Pull Requests
  pull_request:
  workflow_dispatch:

jobs:
  mpw-precheck:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        repo: ['caravel_user_project','caravel_user_mini','caravel_user_sram','caravel_user_project_analog','openframe_timer_example']
      fail-fast: false  # Allow other jobs to continue if one fails
    
    steps:
    - name: Checkout efabless/mpw_precheck
      uses: actions/checkout@v3
      with:
        repository: efabless/mpw_precheck
        path: mpw_precheck

    - name: Checkout ${{ matrix.repo }}
      uses: actions/checkout@v3
      with:
        repository: efabless/${{ matrix.repo }}
        path: ${{ matrix.repo }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Cache Docker layers
      uses: actions/cache@v3
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ hashFiles('mpw_precheck/dependencies/Dockerfile') }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Build Docker image
      run: |
        docker buildx create --use
        docker buildx build \
          --cache-from=type=local,src=/tmp/.buildx-cache \
          --cache-to=type=local,dest=/tmp/.buildx-cache-new,mode=max \
          --output type=docker \
          --tag mpw_precheck:latest \
          mpw_precheck/dependencies
      timeout-minutes: 15

    - name: Move cache
      run: |
        rm -rf /tmp/.buildx-cache
        mv /tmp/.buildx-cache-new /tmp/.buildx-cache

    - name: Cache PDK
      id: cache-pdk
      uses: actions/cache@v3
      with:
        path: ${{ github.workspace }}/pdk
        key: ${{ runner.os }}-pdk-${{ hashFiles('**/volare.toml') }}

    - name: Install Volare and PDK
      if: steps.cache-pdk.outputs.cache-hit != 'true'
      run: |
        python3 -m pip install --upgrade --no-cache-dir volare
        mkdir -p ${{ github.workspace }}/pdk
        volare enable --pdk sky130 --version latest
      env:
        PDK_ROOT: ${{ github.workspace }}/pdk

    - name: Run MPW Precheck
      run: |
        mkdir -p ${{ github.workspace }}/mpw_precheck_output
        docker run --rm \
          -v ${{ github.workspace }}/mpw_precheck:/mpw_precheck \
          -v ${{ github.workspace }}/${{ matrix.repo }}:/project \
          -v ${{ github.workspace }}/pdk:/pdk \
          -v ${{ github.workspace }}/mpw_precheck_output:/output \
          -e PDK_ROOT=/pdk \
          mpw_precheck:latest \
          python3 /mpw_precheck/mpw_precheck.py --input_directory /project --pdk_root /pdk --output_directory /output
      timeout-minutes: 30

    - name: Collect and upload logs and outputs
      uses: actions/upload-artifact@v3
      with:
        name: mpw-precheck-results-${{ matrix.repo }}
        path: |
          ${{ github.workspace }}/mpw_precheck_output
          ${{ github.workspace }}/mpw_precheck/logs

    - name: Check for failures
      run: |
        if [ -f "${{ github.workspace }}/mpw_precheck_output/mpw_precheck_results.txt" ]; then
          if grep -q "FAIL" "${{ github.workspace }}/mpw_precheck_output/mpw_precheck_results.txt"; then
            echo "MPW Precheck failed for ${{ matrix.repo }}"
            exit 1
          else
            echo "MPW Precheck passed for ${{ matrix.repo }}"
          fi
        else
          echo "Results file not found for ${{ matrix.repo }}"
          exit 1
        fi
